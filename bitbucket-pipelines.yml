definitions:
  scripts:
    - script: &resetDB
        ./artisan migrate:fresh --force
    - script: &install
        echo "Setter opp miljøet for kjøring" && cp .env.example .env && composer install
  steps:
    - step: &forberedeSvarInn
        name: Forbereder kjøring
        image: atlassian/default-image:3
        caches:
          - docker
        clone:
          enabled: false
        artifacts:
          - "*.pem"
          - "*.xlsx"
          - "*.json"
        script:
          - echo "Laster ned privatnøkkel til dekryptering fra Key Vault"
          - pipe: microsoft/azure-cli-run:1.1.0
            variables:
              AZURE_APP_ID: $AZURE_SP_ID
              AZURE_PASSWORD: $AZURE_SP_SECRET
              AZURE_TENANT_ID: $AZURE_SP_TENANT
              CLI_COMMAND: az keyvault secret download --file privatekey.tmp --name ${AZURE_KV_KEY_NAME} --vault-name ${AZURE_KV_NAME}
          - echo -e "-----BEGIN PRIVATE KEY-----\n$(cat privatekey.tmp)\n-----END PRIVATE KEY-----" > privatekey.pem
          - echo "Laster ned kommunefil fra Azure Blob Storage"
          - pipe: microsoft/azure-cli-run:1.1.0
            variables:
              AZURE_APP_ID: $AZURE_SP_ID
              AZURE_PASSWORD: $AZURE_SP_SECRET
              AZURE_TENANT_ID: $AZURE_SP_TENANT
              CLI_COMMAND: az storage blob download --auth-mode login --file ${SVARINN_EXCEL_LOOKUP_FILE} --name ${SVARINN_EXCEL_LOOKUP_FILE} --container-name ${STORAGE_CONTAINER} --no-progress --account-name ${STORAGE_ACCOUNT_NAME}
  caches:
    laravel: storage/framework/cache
# Setter maksimum kjøretid for et steg
options:
  max-time: 60

image: dibk/sync2pureservice:latest

pipelines:
  custom:
    buildImage:
      - step:
          name: Bygger et docker-image for kjøring av sync2pureservice
          image: atlassian/default-image:4
          services:
            - docker
          caches:
            - docker
          script:
            - echo ${DOCKER_TOKEN} | docker login --username ${DOCKER_USER} --password-stdin
            - curl -L https://depot.dev/install-cli.sh | DEPOT_INSTALL_DIR=/usr/local/bin sh
            - depot bake --project ${DEPOT_PID} -f docker-bake.hcl --push

    jamf2pureservice:
      - step:
          name: Synkroniser mellom Jamf Pro og Pureservice
          deployment: jamf2pureservice
          caches:
            - composer
            - laravel
          runs-on:
            - "self.hosted"
          script:
            - cp .env.example .env
            - *install
            - ./artisan pureservice:sync-jamf

    svarUtMottak:
      - step: *forberedeSvarInn
      - step:
          name: Sjekker SvarUtMottak
          deployment: Production
          caches:
            - composer
          runs-on:
            - "self.hosted"
          script:
            - echo 'Installerer OpenJDK 11 og CMS dekrypter'
            - apk add openjdk11 unzip
            - curl -LO https://github.com/DirektoratetForByggkvalitet/svarut-dekrypter/releases/download/${DEKRYPTER_VER}/dekrypter-${DEKRYPTER_VER}-dist.zip
            - unzip dekrypter-${DEKRYPTER_VER}-dist.zip && rm dekrypter-${DEKRYPTER_VER}-dist.zip
            - echo 'Setter opp og legger inn avhengigheter'
            - mv ${SVARINN_EXCEL_LOOKUP_FILE} *.pem storage/app/
            - *install
            - echo 'Kjører svarinn2pureservice'
            - ./artisan pureservice:svarUtMottak

    eFormidlingMottak:
      - step:
          name: Henter inn meldinger fra eFormidling (Altinn, Svarut, eInnsyn)
          deployment: eFormidling
          caches:
            - composer
          runs-on:
            - "self.hosted"
          script:
            - *install
            - *resetDB
            - echo "Kjører sjekk på innkommende meldinger"
            - ./artisan eformidling:inn

    sjekkInnsynskrav:
      - step: *forberedeSvarInn
      - step:
          name: Sjekker innsynskrav
          deployment: eFormidling
          caches:
            - composer
          script:
            - echo 'Kjører sjekkInnsynskrav'
            - *install
            - ./artisan pureservice:sjekkInnsynskrav


    offentlige2ps:
      - step:
          name: 'Importerer offentlige instanser fra BRREG inn i Pureservice'
          deployment: Production
          caches:
            - composer
          script:
            - *install
            - *resetDB
            - ./artisan pureservice:offentlige2ps


    tool-build-dekrypter:
      - step:
          image: maven:3.8-openjdk-11-slim
          name: Laster ned og bygger ks-dekrypter (som test)
          deployment: Test
          clone:
            enabled: false
          script:
            - apt-get update &&	apt-get install -y --no-install-recommends git
            - git clone https://github.com/DirektoratetForByggkvalitet/svarut-dekrypter.git
            - cd svarut-dekrypter
            - mvn -e package
          artifacts:
            - "**/target/*.zip"

    masseutsendelse:
      - step:
          deployment: Production
          name: Ser etter masseutsendelser i PS og sørger for å sende dem
          caches:
            - composer
          script:
            - *install
            - *resetDB
            - ./artisan pureservice:utsending

    masseutsendelse-test:
      - step:
          deployment: Test
          name: 'TEST: Ser etter masseutsendelser i PS og sørger for å sende dem'
          caches:
            - composer
          script:
            - *install
            - *resetDB
            - ./artisan pureservice:utsending

    splittInnsynskrav:
      - step:
          name: Splitter et innsynskrav gitt med requestNumber
          caches:
            - composer
          script:
            - *install
            - ./artisan pureservice:splittInnsynskrav ${requestNumber}

